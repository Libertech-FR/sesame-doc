import{_ as s,c as n,o as a,a as e}from"./app-BVZwSifu.js";const t={},p=e(`<h1 id="exemples-d-utilisation-de-l-api-sesame" tabindex="-1"><a class="header-anchor" href="#exemples-d-utilisation-de-l-api-sesame"><span>Exemples d&#39;utilisation de l&#39;API Sesame</span></a></h1><h2 id="utilisation-en-python-de-l-api" tabindex="-1"><a class="header-anchor" href="#utilisation-en-python-de-l-api"><span>Utilisation en python de l&#39;api</span></a></h2><h3 id="recherche-d-identites" tabindex="-1"><a class="header-anchor" href="#recherche-d-identites"><span>recherche d&#39;identités</span></a></h3><p>Deux variables d&#39;environnement servent à passer l&#39;URL et le TOKEN</p><ul><li>API_BASEURL Url de l api de l&#39;orchestrator</li><li>API_TOKEN JEton d&#39;authentification (créé sur l&#39;orchestrator par la commande <strong>make sesame-create-keyring</strong>)</li></ul><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre class="language-text"><code><span class="line">API_BASEURL=http://192.168.0.1:4000</span>
<span class="line">API_TOKEN=eyJhbGciOiJIUzI....</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Cet exemple prend en argument l&#39;uid et le recherche</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">python get_identity.py <span class="token parameter variable">--uid</span> ddupont</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>Script python get_identity.py</strong></p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre class="language-python"><code><span class="line"><span class="token keyword">import</span> requests</span>
<span class="line"><span class="token keyword">import</span> os</span>
<span class="line"><span class="token keyword">import</span> argparse</span>
<span class="line"></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">get_identity</span><span class="token punctuation">(</span>uid<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    api_baseurl <span class="token operator">=</span> os<span class="token punctuation">.</span>getenv<span class="token punctuation">(</span><span class="token string">&#39;API_BASEURL&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    api_token <span class="token operator">=</span> os<span class="token punctuation">.</span>getenv<span class="token punctuation">(</span><span class="token string">&#39;API_TOKEN&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    headers <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token string">&quot;Authorization&quot;</span><span class="token punctuation">:</span> <span class="token string-interpolation"><span class="token string">f&quot;Bearer </span><span class="token interpolation"><span class="token punctuation">{</span>api_token<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token string">&quot;Content-Type&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;application/json; charset=utf-8&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    params <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token string">&quot;filters[:inetOrgPerson.uid]&quot;</span><span class="token punctuation">:</span> uid</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    response<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>api_baseurl <span class="token operator">+</span><span class="token string">&quot;/management/identities&quot;</span><span class="token punctuation">,</span>headers<span class="token operator">=</span>headers<span class="token punctuation">,</span>params<span class="token operator">=</span>params<span class="token punctuation">)</span></span>
<span class="line">    data<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">return</span> data</span>
<span class="line"></span>
<span class="line"><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span></span>
<span class="line">    parser <span class="token operator">=</span> argparse<span class="token punctuation">.</span>ArgumentParser<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;--uid&#39;</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&#39;uid&#39;</span><span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    args <span class="token operator">=</span> parser<span class="token punctuation">.</span>parse_args<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    data<span class="token operator">=</span>get_identity<span class="token punctuation">(</span>args<span class="token punctuation">.</span>uid<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Status request: &quot;</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token string">&#39;statusCode&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Les filtres sont passés dans le tableau params (voir la documentation au sujet des fitres)</p><p>Pour faire une recherche multiple exemple uid = dupont et identité synchronisée :</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre class="language-python"><code><span class="line">params <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token string">&quot;filters[:inetOrgPerson.uid]&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;ddupont&quot;</span></span>
<span class="line">        <span class="token string">&quot;filters[:state]&quot;</span><span class="token punctuation">:</span> <span class="token number">99</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Pour rechercher tous les identités dont le nom commence par b ou B. Pour ce cas nous utilisons une expression régulière sur le champ sn</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre class="language-python"><code><span class="line">params <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token string">&quot;filters[^inetOrgPerson.sn]&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;/¨b/i&quot;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Pour rechercher toutes les identités à completer ou en erreur</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre class="language-python"><code><span class="line">params <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token string">&quot;filters[@state][0]&quot;</span><span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&quot;filters[@state][1]&quot;</span><span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="modification-d-une-identite" tabindex="-1"><a class="header-anchor" href="#modification-d-une-identite"><span>Modification d&#39;une identité</span></a></h2><p>la modification de l identité se fait par la methode PATCH sur l&#39;url /managment/identities</p><p>Vous devez lire l entrée modifier le tableau et enlever la clé metadata et appeler la méthode path</p><p>Exemple modification de l&#39;état de l identité</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">python set_identity.py <span class="token parameter variable">--uid</span> ddupont <span class="token parameter variable">--status</span> disable</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Script python <strong>set_identity.py</strong></p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre class="language-python"><code><span class="line"><span class="token keyword">import</span> requests</span>
<span class="line"><span class="token keyword">import</span> os</span>
<span class="line"><span class="token keyword">import</span> argparse</span>
<span class="line"></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">get_identity</span><span class="token punctuation">(</span>uid<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    api_baseurl <span class="token operator">=</span> os<span class="token punctuation">.</span>getenv<span class="token punctuation">(</span><span class="token string">&#39;API_BASEURL&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    api_token <span class="token operator">=</span> os<span class="token punctuation">.</span>getenv<span class="token punctuation">(</span><span class="token string">&#39;API_TOKEN&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    headers <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token string">&quot;Authorization&quot;</span><span class="token punctuation">:</span> <span class="token string-interpolation"><span class="token string">f&quot;Bearer </span><span class="token interpolation"><span class="token punctuation">{</span>api_token<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&quot;Content-Type&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;application/json; charset=utf-8&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    params <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token string">&quot;filters[inetOrgPerson.uid]&quot;</span><span class="token punctuation">:</span> uid</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    response <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>api_baseurl <span class="token operator">+</span> <span class="token string">&quot;/management/identities&quot;</span><span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">,</span> params<span class="token operator">=</span>params<span class="token punctuation">)</span></span>
<span class="line">    data <span class="token operator">=</span> response<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">return</span> data</span>
<span class="line"></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">set_identity</span><span class="token punctuation">(</span>uid<span class="token punctuation">,</span>status<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    api_baseurl <span class="token operator">=</span> os<span class="token punctuation">.</span>getenv<span class="token punctuation">(</span><span class="token string">&#39;API_BASEURL&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    api_token <span class="token operator">=</span> os<span class="token punctuation">.</span>getenv<span class="token punctuation">(</span><span class="token string">&#39;API_TOKEN&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    headers <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token string">&quot;Authorization&quot;</span><span class="token punctuation">:</span> <span class="token string-interpolation"><span class="token string">f&quot;Bearer </span><span class="token interpolation"><span class="token punctuation">{</span>api_token<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token string">&quot;Content-Type&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;application/json; charset=utf-8&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    resp<span class="token operator">=</span>get_identity<span class="token punctuation">(</span>uid<span class="token punctuation">)</span></span>
<span class="line">    data_json <span class="token operator">=</span> resp<span class="token punctuation">[</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span></span>
<span class="line">    data_json<span class="token punctuation">[</span><span class="token string">&#39;dataStatus&#39;</span><span class="token punctuation">]</span><span class="token operator">=</span>status</span>
<span class="line">    <span class="token keyword">del</span> data_json<span class="token punctuation">[</span><span class="token string">&#39;metadata&#39;</span><span class="token punctuation">]</span></span>
<span class="line">    <span class="token builtin">id</span><span class="token operator">=</span>resp<span class="token punctuation">[</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&#39;_id&#39;</span><span class="token punctuation">]</span></span>
<span class="line">    response<span class="token operator">=</span>requests<span class="token punctuation">.</span>patch<span class="token punctuation">(</span>api_baseurl <span class="token operator">+</span><span class="token string">&quot;/management/identities/&quot;</span> <span class="token operator">+</span> <span class="token builtin">id</span> <span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">,</span>json<span class="token operator">=</span>data_json<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">return</span> response</span>
<span class="line"></span>
<span class="line"><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span></span>
<span class="line">    parser <span class="token operator">=</span> argparse<span class="token punctuation">.</span>ArgumentParser<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;--uid&#39;</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&#39;uid&#39;</span><span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span> <span class="token string">&#39;--status&#39;</span><span class="token punctuation">,</span><span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&quot;disable | enable&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    args <span class="token operator">=</span> parser<span class="token punctuation">.</span>parse_args<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    status<span class="token operator">=</span><span class="token operator">-</span><span class="token number">3</span></span>
<span class="line">    <span class="token keyword">if</span> args<span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token string">&quot;enable&quot;</span><span class="token punctuation">:</span></span>
<span class="line">        status<span class="token operator">=</span><span class="token number">1</span></span>
<span class="line"></span>
<span class="line">    data<span class="token operator">=</span>set_identity<span class="token punctuation">(</span>args<span class="token punctuation">.</span>uid<span class="token punctuation">,</span>status<span class="token punctuation">)</span></span>
<span class="line">    rep<span class="token operator">=</span>data<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Status request: &quot;</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>rep<span class="token punctuation">[</span><span class="token string">&#39;statusCode&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,24),i=[p];function l(o,c){return a(),n("div",null,i)}const r=s(t,[["render",l],["__file","exempleapi.html.vue"]]),d=JSON.parse(`{"path":"/Api/exempleapi.html","title":"Exemples d'utilisation de l'API Sesame","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Utilisation en python de l'api","slug":"utilisation-en-python-de-l-api","link":"#utilisation-en-python-de-l-api","children":[{"level":3,"title":"recherche d'identités","slug":"recherche-d-identites","link":"#recherche-d-identites","children":[]}]},{"level":2,"title":"Modification d'une identité","slug":"modification-d-une-identite","link":"#modification-d-une-identite","children":[]}],"git":{"updatedTime":1739869713000,"contributors":[{"name":"Alain Abbas","email":"alain.abbas@libertech.fr","commits":2}]},"filePathRelative":"Api/exempleapi.md"}`);export{r as comp,d as data};
